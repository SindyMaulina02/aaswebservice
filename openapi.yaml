openapi: 3.0.0
info:
  title: asswebservice
  version: 1.0.0
servers:
  - url: https://130.162.195.228/mhs714220018
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
paths:
  /regis:
    post:
      tags:
        - default
      summary: regis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  example: 1
                username:
                  type: string
                  example: sindy
                email:
                  type: string
                  example: sindy@example.com
                password:
                  type: string
                  example: securepassword123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /login:
    post:
      tags:
        - default
      summary: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: sindymaulina
                password:
                  type: string
                  example: securepassword123
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /kelas:
    get:
      tags:
        - default
      summary: kelas
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - default
      summary: kelas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_kelas:
                  type: string
                  example: pemrograman
                semester:
                  type: integer
                  example: 4
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /kelas/{id}:
    get:
      tags:
        - default
      summary: Get kelas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 11
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: Update kelas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 11
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama_kelas:
                  type: string
                  example: pemrograman
                semester:
                  type: integer
                  example: 9
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - default
      summary: Delete kelas by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 11
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /mahasiswa:
    get:
      tags:
        - default
      summary: mahasiswa
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    post:
      tags:
        - default
      summary: mahasiswa
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  example: sindy m
                nim:
                  type: string
                  example: '0333333'
                jurusan:
                  type: string
                  example: Teknik Informatika
                user_id:
                  type: integer
                  example: 1
                kelas_id:
                  type: integer
                  example: 1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
  /mahasiswa/{id}:
    get:
      tags:
        - default
      summary: Get mahasiswa by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 12
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    put:
      tags:
        - default
      summary: Update mahasiswa by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 12
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nama:
                  type: string
                  example: sindy maulina
                nim:
                  type: string
                  example: '12345610'
                jurusan:
                  type: string
                  example: Teknik Informatika
                user_id:
                  type: integer
                  example: 2
                kelas_id:
                  type: integer
                  example: 2
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
    delete:
      tags:
        - default
      summary: Delete mahasiswa by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          example: 12
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful response
          content:
            application/json: {}
